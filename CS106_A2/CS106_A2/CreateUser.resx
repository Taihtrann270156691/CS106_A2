<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCABJAKMDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD4M/4eGfH7/ouPxg/8LPUf/j1H/Dwz4/f9Fx+MH/hZ6j/8erx6
        iv6E+qUP5F9yPzj21T+Z/eew/wDDwz4/f9Fx+MH/AIWeo/8Ax6vuP/giz8Df2lv+CkXxXGueIPjV8bNN
        +EPhi6C6zqC+NNSjbVZlCv8A2fbt52d7BlMjj/Vow5DMgPxj/wAE6P2D/E3/AAUS/ae0b4f6B5tpZSH7
        XrmrCLzI9GsEYCWdhkAtyFRcjc7qMgZI/pG+J/xe+CP/AARc/Yx06G6+z+HPCPhm1+yaRpNqEbUtduAM
        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
        JO2MfKM8Cteiipbb1ZW2wUUUUgP/2Q==
</value>
  </data>
</root>